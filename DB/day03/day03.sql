SELECT * FROM EMPLOYEES e ;
SELECT * FROM DEPARTMENTS d ;

/* inner join */
SELECT 	e.EMPLOYEE_ID, e.FIRST_NAME , d.DEPARTMENT_ID, d.DEPARTMENT_NAME  
FROM 	EMPLOYEES e 
	INNER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
;
-- 178
SELECT * FROM EMPLOYEES e WHERE EMPLOYEE_ID = 178;
SELECT * FROM EMPLOYEES e WHERE DEPARTMENT_ID IS NULL ;

/* left outer join */
SELECT 	e.EMPLOYEE_ID, e.FIRST_NAME , d.DEPARTMENT_ID, d.DEPARTMENT_NAME  
FROM 	EMPLOYEES e 
	LEFT OUTER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
;

/* right outer join  */
SELECT 	e.EMPLOYEE_ID, e.FIRST_NAME , d.DEPARTMENT_ID, d.DEPARTMENT_NAME  
FROM 	EMPLOYEES e 
	RIGHT OUTER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
;

/* inner join */
SELECT 	e.EMPLOYEE_ID, e.FIRST_NAME , d.DEPARTMENT_ID, d.DEPARTMENT_NAME 
	,	l.LOCATION_ID , l.CITY , l.STREET_ADDRESS 
	, 	j.JOB_ID , j.JOB_TITLE 
FROM 	EMPLOYEES e 
	INNER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
	INNER JOIN LOCATIONS l 
	ON d.LOCATION_ID = l.LOCATION_ID 
	INNER JOIN JOBS j 
	ON e.JOB_ID	= j.JOB_ID  
WHERE l.CITY = 'Seattle'	
;

/* full outer join */
SELECT 	e.EMPLOYEE_ID , e.FIRST_NAME 
	,	d.DEPARTMENT_ID , d.DEPARTMENT_NAME 
FROM 	EMPLOYEES e 
	FULL OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
;
-- left outer join, innser join
-- 문제1) 사원들의 이름, 부서번호, 부서명을 출력하라
-- 106
SELECT 	e.FIRST_NAME , d.DEPARTMENT_ID , d.DEPARTMENT_NAME 
FROM 	EMPLOYEES e
	INNER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID  = d.DEPARTMENT_ID 
;
-- 107
SELECT 	e.FIRST_NAME , d.DEPARTMENT_ID , d.DEPARTMENT_NAME 
FROM 	EMPLOYEES e
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID  = d.DEPARTMENT_ID 
;


-- 문제2) 30번 부서의 사원들의 이름,직업,부서명을 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME 
FROM 	EMPLOYEES e 
	INNER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE e.DEPARTMENT_ID = 30
;

-- 문제3) 커미션을 받는 사원의 이름, 직업, 부서번호,부서명을 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME 
FROM 	EMPLOYEES e 
	INNER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE e.COMMISSION_PCT IS NOT NULL 
;


-- 문제4) 지역번호 2500 에서 근무하는 사원의 이름, 직업,부서번호,부서명을 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
FROM 	EMPLOYEES e 
	INNER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE d.LOCATION_ID = 2500
;

-- 문제5) 이름에 A가 들어가는 사원들의 이름과 부서이름을 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE e.FIRST_NAME LIKE '%A%'
;

-- 문제6) 사원이름과 그 사원의 관리자 이름을 출력하라
SELECT 	e.FIRST_NAME "사원명"	, e.EMPLOYEE_ID , e.MANAGER_ID 
	, 	e2.FIRST_NAME "매니저명"	, e2.EMPLOYEE_ID , e2.MANAGER_ID 
FROM 	EMPLOYEES e
	INNER JOIN EMPLOYEES e2 
	ON e.MANAGER_ID = e2.EMPLOYEE_ID  
;

SELECT 	* FROM EMPLOYEES e WHERE EMPLOYEE_ID = 201;
SELECT 	* FROM EMPLOYEES e WHERE EMPLOYEE_ID = 100;

-- 문제7) 사원이름과 부서명과 월급을 출력하는데 월급이 3000 이상인 사원을 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE e.SALARY >= 3000
;

-- 문제8) 급여가 3000에서 5000사이인 사원의 이름과 소속부서명 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
	,	e.SALARY 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE e.SALARY BETWEEN 3000 AND 5000
;


-- 문제9) 급여가 3000이하인 사원의 이름과 급여, 근무지를 출력하라
SELECT 	e.FIRST_NAME , e.JOB_ID , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
	,	e.SALARY , l.CITY 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
	LEFT OUTER JOIN LOCATIONS l 
	ON d.LOCATION_ID = l.LOCATION_ID 
WHERE e.SALARY <= 3000
;


-- 문제10) Steven King의 부서명을 출력하라.
SELECT 	e.FIRST_NAME , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE 	e.LAST_NAME = 'King'
AND 	e.FIRST_NAME = 'Steven'
;

-- 문제11) IT부서에서 근무하고 있는 사람들을 출력하라.
SELECT 	e.FIRST_NAME , d.DEPARTMENT_NAME , d.DEPARTMENT_ID 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE 	d.DEPARTMENT_NAME = 'IT'
;

-- 문제12) EMPLOYEES 테이블에서 사원번호,이름,업무, EMPLOYEES 테이블의 부서번호, 
-- DEPARTMENTS 테이블의 부서번호,부서명,근무지를 출력하여라.
SELECT 	e.FIRST_NAME , d.DEPARTMENT_NAME , d.DEPARTMENT_ID
	,	e.EMPLOYEE_ID , e.JOB_ID , d.LOCATION_ID 
FROM 	EMPLOYEES e 
	LEFT OUTER  JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
;

-----------------------------------------------------
-- 서브쿼리
-- 6,462
SELECT 	ROUND(AVG(SALARY))   FROM EMPLOYEES e; 

SELECT 	*
FROM 	EMPLOYEES e 
WHERE 	SALARY < 6462
;

SELECT 	*
FROM 	EMPLOYEES e 
WHERE 	SALARY < ROUND(AVG(SALARY))
;

SELECT 	*
FROM 	EMPLOYEES e 
WHERE 	SALARY < (SELECT ROUND(AVG(SALARY)) FROM EMPLOYEES)
;

-- 나라의 ID가 US인 지역에 존재하는 부서를 조회
-- 1400, 1500, 1600, 1700
SELECT 	LOCATION_ID 
FROM 	LOCATIONS l 
WHERE 	COUNTRY_ID = 'US'
;

SELECT 	*
FROM 	DEPARTMENTS d 
WHERE 	LOCATION_ID IN (1400, 1500, 1600, 1700)
;

SELECT 	*
FROM 	DEPARTMENTS d 
WHERE 	LOCATION_ID IN (SELECT 	LOCATION_ID 
						FROM 	LOCATIONS l 
						WHERE 	COUNTRY_ID = 'US')
;
-- 서브쿼리, 7분까지
-- 월급이 가장 적은 사원
SELECT 	MIN(SALARY)   FROM EMPLOYEES;
SELECT 	*
FROM 	EMPLOYEES e 
WHERE 	e.SALARY = (SELECT 	MIN(SALARY)   FROM EMPLOYEES)
;

-- 월급이 가장 많은 사원
SELECT 	*
FROM 	EMPLOYEES e 
WHERE 	e.SALARY = (SELECT 	MAX(SALARY)   FROM EMPLOYEES)
;

--------------------------------------------------------------
-- 문제1) EMPLOYEES 테이블에서 Kochhar의 급여보다 많은 
-- 사원의 정보를 사원번호,이름,담당업무,급여를 출력하라.
SELECT 	EMPLOYEE_ID , FIRST_NAME , JOB_ID , SALARY 
FROM 	EMPLOYEES e 
WHERE 	SALARY > (	SELECT 	SALARY 
					FROM 	EMPLOYEES e2 
					WHERE 	LAST_NAME = 'Kochhar')
;

-- 문제2) EMPLOYEES 테이블에서 급여의 평균보다 적은 사원의 
-- 사원번호,이름,담당업무,급여,부서번호를 출력하여라.  
SELECT 	EMPLOYEE_ID , FIRST_NAME , JOB_ID , SALARY , e.DEPARTMENT_ID
	,	d.DEPARTMENT_NAME 
FROM 	EMPLOYEES e 
	LEFT OUTER JOIN DEPARTMENTS d 
	ON e.DEPARTMENT_ID = d.DEPARTMENT_ID 
WHERE 	SALARY < (	SELECT 	AVG(SALARY) 
					FROM 	EMPLOYEES e2)
;


-- 문제3) 업무별(job_id)로 최소 급여를 받는 사원의 정보를 
-- 사원번호,이름,업무,부서번호를 출력하여라. 
-- 단 업무별로 정렬하여라.
SELECT 	EMPLOYEE_ID , FIRST_NAME , JOB_ID , DEPARTMENT_ID , SALARY 
FROM 	EMPLOYEES e
WHERE 	(JOB_ID, SALARY) IN ( 	SELECT 	JOB_ID , MIN(SALARY) 
								FROM 	EMPLOYEES e2 
								GROUP BY JOB_ID )
ORDER BY JOB_ID 
;

SELECT 	JOB_ID , MIN(SALARY) 
FROM 	EMPLOYEES e2 
GROUP BY JOB_ID 
;

-- 문제4) EMPLOYEES 테이블에서 (가장 많은 사원)을 갖는 
-- MANAGER의 사원번호를 출력하라.
SELECT 	MANAGER_ID, COUNT(*)  
FROM 	EMPLOYEES e
GROUP BY MANAGER_ID 
ORDER BY count(*) desc
;

SELECT 	MAX(COUNT(*))   
FROM 	EMPLOYEES e
GROUP BY MANAGER_ID 
;

SELECT 	MANAGER_ID , COUNT(*) 
FROM 	EMPLOYEES e 
GROUP BY MANAGER_ID 
HAVING COUNT(*) = (	SELECT 	MAX(COUNT(*))   
					FROM 	EMPLOYEES e
					GROUP BY MANAGER_ID )
;

-- 문제5) EMPLOYEES 테이블에서 (가장 많은 사원이 속해 있는 부서 번호)와 
-- 사원수를  출력하라.
SELECT 	DEPARTMENT_ID , COUNT(*) 
FROM 	EMPLOYEES e
GROUP BY DEPARTMENT_ID 
HAVING count(*) = (	SELECT 	MAX(count(*))  
					FROM 	EMPLOYEES e2 
					GROUP BY DEPARTMENT_ID)
;

-- 문제6) EMPLOYEES 테이블에서 (사원번호가 123인 사원의 직업)과 같고 
-- (사원번호가 192인 사원의 급여(SAL))보다 많은 사원의 
-- 사원번호,이름,직업,급여를 출력하라.
SELECT 	EMPLOYEE_ID , FIRST_NAME , JOB_ID , SALARY 
FROM 	EMPLOYEES e 
WHERE 	JOB_ID = (SELECT JOB_ID FROM EMPLOYEES e2 WHERE EMPLOYEE_ID=123)
AND 	SALARY > (SELECT SALARY FROM EMPLOYEES e3 WHERE EMPLOYEE_ID=192)
;

-- 문제7) EMPLOYEES 테이블에서 (50번 부서의 최소 급여)를 받는 사원보다 많은 급여를 받는 
-- 사원의 사원번호,이름,업무,입사일자,급여,부서번호를 출력하라. 
-- 단 50번은 제외
SELECT 	EMPLOYEE_ID , FIRST_NAME , JOB_ID , HIRE_DATE , SALARY , DEPARTMENT_ID 
FROM 	EMPLOYEES e 
WHERE 	SALARY > ( SELECT MIN(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID =50 )
AND 	DEPARTMENT_ID <> 50
;
---------------------------------------------------
-- DDL
CREATE TABLE EMPLOYEES2(
	employee_id		number(10),
	name			varchar2(20),
	salary			number(7,2)	
);

-- 기존 테이블과 동일하게 작성
CREATE TABLE EMPLOYEES3
AS
SELECT * FROM EMPLOYEES2
;

-- 컬럼추가
ALTER TABLE EMPLOYEES2 add(
	manager_id	varchar2(10)
);
SELECT * FROM EMPLOYEES2 e ;

-- 컬럼수정
ALTER TABLE EMPLOYEES2 modify(
	manager_id	varchar2(20)
);

-- 컬럼 삭제
ALTER TABLE EMPLOYEES2 DROP COLUMN manager_id;

-- 테이블(의 구조를) 삭제
DROP TABLE EMPLOYEES3 ;

-- INSERT 
SELECT * FROM EMPLOYEES2 e ;
INSERT INTO EMPLOYEES2 e VALUES (1, '테스트',3000);
INSERT INTO EMPLOYEES2 e VALUES (2, '홍길동',5000);

-- TRUNCATE : 데이터 비워내기
TRUNCATE TABLE EMPLOYEES2 ;















